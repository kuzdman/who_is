	--- WhoIs ---

0.1 - Предназначение программы
	Программа позволяет получить из большого каталога фотографии с определённым человеком (или несколькими) за короткий промежуток времени.

1.1 - Описание файлов
	/
		WhoIs.exe   - скомпилированный Main.py (использовать для запуска)
		Main.py     - основной python файл (подключает все модули)
		script.py   - python файл с классом, который распознаёт лица на фото
		log.py      - python файл с классами для ведения логов и записи событий в консоль
		logs.txt    - txt файл с логами программы
		console.txt - txt файл с подробными событиями

		/faces
			Каталог для зарегестрированных лиц
		
		/GUI
			AddPerson.ui - GUI файл страницы добавления новой личности
			Analyze.ui   - GUI файл страницы анализирования каталогов
			MainMenu.ui  - GUI файл основного меню
			
			/images_for_GUI
				Папка с изображениями для графической оболочки программы
		
		/libs
			dlib_face_recognition_resnet_model_v1.dat - модель для выделения лиц по 68 ключевым точкам
			shape_predictor_68_face_landmarks.dat     - нейронная сеть ResNet34 для распознавания лиц
		
		/static
			Этот каталог содержит нумерованные папки с распознанными фотографиями

1.2 - Используемые технологии
	В проекте использовался язык программирования Python 3.6.7, среда программирования PyCharm, дистрибутив ЯП Python Anaconda, ЯП HTML, с использованием bootstrap и библиотеки ЯП Python:
		PyQt5
		dlib
		skimage
		scipy
		flask
		shutil
		sys
		os
		webbrowser
		win32api

1.3 - Структура проекта
	Весь проект разделён на несколько файлов. В каждом файле описываются различные классы для импортирования из Main.py.
	
	В Main.py описываются классы для PyQT5 и основной работы программы.
	
	В script.py описывается класс для распознавания лиц.
	Пример использования script.py:
		<======================================>
		from script import Verification
		v = Verification("<каталог с фотографиями для распознавания>", "<имя одного или нескольких людей, которого (ых) ищем>")
		v.search()
		# Далее в консоль будет выведены фото, на которых найдены лица людей в виде списка
		<======================================>
	
	В log.py описываются классы для записи событий в logs.txt и console.txt.
	Пример использования log.py:
		<======================================>
		from log import Log, Console
		Log.error(None, "<текстовое сообщение ошибки>")
		Log.addPerson(None, "<имя добавленного человка>")
		Console.write(None, "<текст события>")
		<======================================>


2.1 - Как пользоваться
	При запуске WhoIs.exe открывается основное меню программы, где есть 4 кнопки:
		
		Add Personality - для добавления новых лиц (людей) в базу данных
			После нажатия на эту кнопку, вам нужно ввести фотографию человека, где его очень хорошо видно, и, его имя
		
		Analyze - для распознавания лиц на фотографии
			После нажатия на эту кнопку, вам нужно ввести каталог с фотографиями, который вы хотите проанализировать и имя человека, которого будете искать.
			Также можно ввести несколько имён используя символ ";" как сепаратор (например, "Ivan;Harry;Will")
		
		About the programm - информация о продукте
		
		Exit - выход из программы

2.2 - Советы по использованию
	* ВНИМАНИЕ! Когда вы нажали на кнопку "OK" в Analyze, программа начинает распознавание и это может занять некоторое время (в зависимости от мощности вашего ПК). Программа может отображать статус "Не отвечает", что вполне нормально. Дождитесь, когда кнопка "Here will be a link" превратится в кнопку с надписью адреса локального сервера.
	* После распознавания программа предлагает открыть локальный web server, где фотографии будут отображены в виде карусели (bootstrap carousel). Если же вы хотите получить фотографии в виде файлов, то можете их найти в папке static.
	* Рекомендуем порой очищать папку static от фотографий, если вам уже эти фото не пригодятся, (но саму папку static оставлять) для освобождения места (файл carousel.css изменять нельзя).
	* После распознавания программа копирует нужные фотографии, а не вырезает их.
	* Для более хорошего распознавания загружайте такие фотографии в базу данных, где человека видно как можно лучше.


3.0 - Автор
	Кузнецов Дмитрий
	Самостоятельное выполнение
	https://github.com/kuzdman/who_is
